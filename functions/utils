function psu {
    ps -ef | awk '{print $1}' | sort | uniq -c | sort -rn
}

function box_name {
    [ -f ~/.box-name ] && cat ~/.box-name || hostname -s
}

function prompt_char {
    git branch >/dev/null 2>/dev/null && echo '±' && return
    hg root >/dev/null 2>/dev/null && echo '☿' && return
    echo '○'
}

function hstat {
    history | awk '{a[$4]++} END {for(i in a){print a[i] " " i}}' | sort -rn | head
}

function tmw {
    tmux split-window -dh "$*"
}

function paranoid_erase {
    for n in `seq 7`; do dd if=/dev/urandom of=$1 bs=8b conv=notrunc; done
}

function fs {
    du -s ./* | sort -n | cut -f 2- | xargs -Ix du -sh x
}

function getcomposer {
    curl -s https://getcomposer.org/installer | php
}

function geoip {
    local ip=${1:-$(curl -s icanhazip.com)}
    curl -s "http://www.geody.com/geoip.php?ip=${ip}" | sed '/^IP:/!d;s/<[^>][^>]*>//g'
}

function take {
    mkdir -p "$1"
    cd "$1"
}

function path {
    echo $PATH | tr ":" "\n"
}

lfunc() {
    compgen -A function ${1:-}
}

lcoreutils() {
    curl 'http://www.gnu.org/software/coreutils/manual/coreutils.html' 2>/dev/null \
    | grep 'h3 class' \
    | grep 'class="command"' \
    | sed 's/.*class="command">//' \
    | sed 's|</span></samp>||' \
    | sed 's|</h3>||' \
    | grep ':' \
    | sort
}

# https://github.com/paulirish/dotfiles/blob/e228bbe649c35b4ad21c8d9313e6e6ebe054d852/.functions
# Start an HTTP server from a directory, optionally specifying the port
function server() {
    local port="${1:-8000}"

    if [ $(which open) ]; then
        open "http://localhost:${port}/"
    elif [ $(which xdg-open) ]; then
        xdg-open "http://localhost:${port}/"
    fi

    # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
    # And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)
    python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# https://github.com/paulirish/dotfiles/blob/e228bbe649c35b4ad21c8d9313e6e6ebe054d852/.functions
# Syntax-highlight JSON strings or files
function json() {
    if [ -p /dev/stdin ]; then
        # piping, e.g. `echo '{"foo":42}' | json`
        python -mjson.tool | pygmentize -l javascript
    else
        # e.g. `json '{"foo":42}'`
        python -mjson.tool <<< "$*" | pygmentize -l javascript
    fi
}

# vim: set syn=sh :
